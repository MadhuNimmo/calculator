{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","logic/calculate.js","logic/isNumber.js","component/ValidKeys.js","component/App.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","functions","orange","wide","join","trim","onClick","ButtonPanel","buttonName","Button_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","eq","alert","div","Error","concat","calculate","obj","total","next","higherOrder","test","parseInt","result","includes","parseFloat","higherOrderTotal","isHigherOrderOperation","validKeys","charCode","App","state","setState","handleKeyPress","keyEvent","key","find","k","tabIndex","onKeyPress","Display_Display","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8733fdba.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.functions ? \"functions\" : \"\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ButtonPanel.css\";\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  render() {\n    return (\n      <div className=\"component-button-panel\">\n        <div>\n          <Button name=\"AC\" clickHandler={this.handleClick} functions />\n          <Button name=\"+/-\" clickHandler={this.handleClick} functions />\n          <Button name=\"%\" clickHandler={this.handleClick} functions />\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"7\" clickHandler={this.handleClick} />\n          <Button name=\"8\" clickHandler={this.handleClick} />\n          <Button name=\"9\" clickHandler={this.handleClick} />\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"4\" clickHandler={this.handleClick} />\n          <Button name=\"5\" clickHandler={this.handleClick} />\n          <Button name=\"6\" clickHandler={this.handleClick} />\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"1\" clickHandler={this.handleClick} />\n          <Button name=\"2\" clickHandler={this.handleClick} />\n          <Button name=\"3\" clickHandler={this.handleClick} />\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"0\" clickHandler={this.handleClick} wide />\n          <Button name=\".\" clickHandler={this.handleClick} />\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\n        </div>\n      </div>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(\n    numberTwo || (operation === \"รท\" || operation === \"x\" ? \"1\" : \"0\"),\n  ); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"รท\") {\n    // ISSUE #77 & 105 - Error while dividing by zero\n    if (two.eq(0)) {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n      // clear high order values\n      higherOrder: {},\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    // ISSUE #25 The leftmost zero in a number\n    buttonName = parseInt(buttonName, 10).toString();\n\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is a higher order operation\n    if (obj.higherOrder && obj.higherOrder.operation) {\n      return {\n        higherOrder: {\n          // set higher order number\n          next: buttonName,\n          operation: obj.higherOrder.operation,\n        },\n      };\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    // ISSUE 40 - Does not calculate the percentage after\n    // addition or subtraction or multiplication or division\n    if (obj.total) {\n      return {\n        total: Big(obj.total)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (!obj.next || !obj.operation) {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  // ISSUE #17 - Error while double click in divide button (moved up check)\n  // ISSUE #39 - Error while double clicking on the multiply button after entering only one number (moved up check)\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation || buttonName === \"=\") {\n    // Prevent operation if button is \"=\"\n    buttonName = buttonName === \"=\" ? null : buttonName;\n    // ISSUE #16 - Calculator makes the sum of the two previous numbers before multiplying\n    // If there is a higher order value, perform calculation\n    if (obj.higherOrder && obj.higherOrder.next) {\n      // calculate higher operation with next values\n      const higherOrderTotal = operate(\n        obj.next,\n        obj.higherOrder.next,\n        obj.higherOrder.operation,\n      );\n      if (isHigherOrderOperation(buttonName)) {\n        // Next is higher order operation\n        return {\n          // Don't calculate total yet\n          next: higherOrderTotal,\n          higherOrder: {\n            next: null,\n            // set higher order operation\n            operation: buttonName,\n          },\n        };\n      } else {\n        // Next is lower order operation\n        return {\n          // Calculate total\n          total: operate(obj.total, higherOrderTotal, obj.operation),\n          next: null,\n          // set lower order operation\n          operation: buttonName,\n          higherOrder: {\n            next: null,\n            operation: null,\n          },\n        };\n      }\n    }\n    // If operation is a higher order operation, perform calculation\n    if (isHigherOrderOperation(obj.operation)) {\n      return {\n        // perform total calculation\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        // set operation\n        operation: buttonName,\n      };\n    }\n    // If next operation is a lower order operation\n    if (!isHigherOrderOperation(buttonName)) {\n      return {\n        // perform total calculation\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        // set operation\n        operation: buttonName,\n        higherOrder: {\n          next: null,\n          operation: null,\n        },\n      };\n    }\n    // If next operation is a higher order operation\n    if (isHigherOrderOperation(buttonName)) {\n      return {\n        higherOrder: {\n          next: null,\n          // set operation\n          operation: buttonName,\n        },\n      };\n    }\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n\n// Did user press a higher order operation button\nfunction isHigherOrderOperation(operation) {\n  if (operation === \"x\" || operation === \"รท\") {\n    return true;\n  }\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","export const validKeys = [\n  { name: \"0\", charCode: 48 },\n  { name: \"1\", charCode: 49 },\n  { name: \"2\", charCode: 50 },\n  { name: \"3\", charCode: 51 },\n  { name: \"4\", charCode: 52 },\n  { name: \"5\", charCode: 53 },\n  { name: \"6\", charCode: 54 },\n  { name: \"7\", charCode: 55 },\n  { name: \"8\", charCode: 56 },\n  { name: \"9\", charCode: 57 },\n  { name: \".\", charCode: 46 },\n  { name: \"=\", charCode: 13 },\n  { name: \"+\", charCode: 43 },\n  { name: \"-\", charCode: 45 },\n  { name: \"x\", charCode: 42 },\n  { name: \"รท\", charCode: 47 },\n  { name: \"%\", charCode: 53 },\n];\n","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport { validKeys } from \"./ValidKeys\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n    higherOrder: {\n      next: null,\n      operation: null,\n    },\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  // ISSUE #55 doesn't support key presses\n  handleKeyPress = keyEvent => {\n    const key = validKeys.find(k => k.charCode === keyEvent.charCode);\n    if (key) {\n      this.setState(calculate(this.state, key.name));\n    }\n  };\n\n  render() {\n    return (\n      <div\n        tabIndex=\"0\"\n        onKeyPress={this.handleKeyPress}\n        className=\"component-app\"\n      >\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}